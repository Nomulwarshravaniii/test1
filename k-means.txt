import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv('Social_Network_Ads.csv')
from sklearn.preprocessing import LabelEncoder
label_encoder=LabelEncoder()

df['Gender']=label_encoder.fit_transform(df['Gender'])
x=df[['Age','EstimatedSalary']]
plt.title('unclustered data ')
plt.xlabel('Age')
plt.ylabel('EstimatedSalary')
plt.scatter(df['Age'],df['EstimatedSalary'])
#how to calculate ideal value of k
#elbow and silhouette method
from sklearn.cluster import KMeans
sse=[]
for k in range(1,16):
    km=KMeans(n_clusters=k)
    km.fit_predict(x)
    sse.append(km.inertia_)
plt.title('Elblow Method')
plt.xlabel('value of k')
plt.ylabel('SSE')
plt.grid()
plt.xticks(range(1,16))
plt.plot(range(1,16),sse,marker='.',color='red')

km=KMeans(n_clusters=3,random_state=0)
labels=km.fit_predict(x)
labels
#printing centroid of all the clusters
km.cluster_centers_
#saving centroid in cent variable
cent=km.cluster_centers_
plt.figure(figsize=(16,9))
plt.subplot(1,2,1)
plt.title('unclustered data ')
plt.xlabel('AGE')
plt.ylabel('ESTIMATED SALARY')
plt.scatter(x['Age'],x['EstimatedSalary'])


plt.subplot(1,2,2)
plt.title('clustered data ')
plt.xlabel('AGE')
plt.ylabel('ESTIMATED SALARY')
plt.scatter(x['Age'],x['EstimatedSalary'],c=labels)#here c means same 0 have same color 1 have same,etc.
plt.scatter(cent[:,0],cent[:,1],s=50,color='k')#k means black color which is centroid point
km.inertia_
km.labels_
#to remove label
df[labels==4]
four=df[labels==4]
four.to_csv('mydata.csv')
km
km.predict([[46,78]])